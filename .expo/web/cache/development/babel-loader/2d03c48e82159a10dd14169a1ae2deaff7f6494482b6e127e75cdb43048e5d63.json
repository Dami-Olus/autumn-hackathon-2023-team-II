{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Cravings(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedMeal = _useState2[0],\n    setSelectedMeal = _useState2[1];\n  var mealTypes = [{\n    label: \"Breakfast\",\n    image: require(\"./breakfast.png\")\n  }, {\n    label: \"Brunch\",\n    image: require(\"./brunch.png\")\n  }, {\n    label: \"Lunch/Dinner\",\n    image: require(\"./lunchdinner.png\")\n  }, {\n    label: \"Snack\",\n    image: require(\"./snack.png\")\n  }, {\n    label: \"Teatime\",\n    image: require(\"./teatime.png\")\n  }];\n  var handleMealSelection = function handleMealSelection(mealType) {\n    setSelectedMeal(mealType);\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"What type of meal are we having?\"\n    }), mealTypes.map(function (mealType, index) {\n      return _jsxs(TouchableOpacity, {\n        style: [styles.mealButton, selectedMeal === mealType.label && styles.selectedMealButton],\n        onPress: function onPress() {\n          return handleMealSelection(mealType.label);\n        },\n        children: [_jsx(Image, {\n          source: mealType.image,\n          style: styles.buttonImage\n        }), _jsx(Text, {\n          style: styles.buttonLabel,\n          children: mealType.label\n        })]\n      }, index);\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  heading: {\n    fontSize: 20,\n    marginBottom: 20\n  },\n  mealButton: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5\n  },\n  selectedMealButton: {\n    backgroundColor: \"lightblue\"\n  },\n  buttonImage: {\n    width: 24,\n    height: 24,\n    marginRight: 10\n  },\n  buttonLabel: {\n    fontSize: 16\n  }\n});\nexport default Cravings;","map":{"version":3,"names":["React","useState","SafeAreaView","Text","View","TouchableOpacity","Image","StyleSheet","jsx","_jsx","jsxs","_jsxs","Cravings","_ref","navigation","_useState","_useState2","_slicedToArray","selectedMeal","setSelectedMeal","mealTypes","label","image","require","handleMealSelection","mealType","style","styles","container","children","heading","map","index","mealButton","selectedMealButton","onPress","source","buttonImage","buttonLabel","create","flex","alignItems","justifyContent","fontSize","marginBottom","flexDirection","marginVertical","padding","borderWidth","borderColor","borderRadius","backgroundColor","width","height","marginRight"],"sources":["/Users/marcoruiz/code/autumn-hackathon-2023-team-II/screens/Cravings.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { SafeAreaView, Text, View, TouchableOpacity, Image, StyleSheet } from \"react-native\";\n\nfunction Cravings({ navigation }) {\n  const [selectedMeal, setSelectedMeal] = useState(null);\n\n  const mealTypes = [\n    { label: \"Breakfast\", image: require(\"./breakfast.png\") },\n    { label: \"Brunch\", image: require(\"./brunch.png\") },\n    { label: \"Lunch/Dinner\", image: require(\"./lunchdinner.png\") },\n    { label: \"Snack\", image: require(\"./snack.png\") },\n    { label: \"Teatime\", image: require(\"./teatime.png\") },\n  ];\n\n  const handleMealSelection = (mealType) => {\n    setSelectedMeal(mealType);\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Text style={styles.heading}>What type of meal are we having?</Text>\n      {mealTypes.map((mealType, index) => (\n        <TouchableOpacity\n          key={index}\n          style={[\n            styles.mealButton,\n            selectedMeal === mealType.label && styles.selectedMealButton\n          ]}\n          onPress={() => handleMealSelection(mealType.label)}\n        >\n          <Image source={mealType.image} style={styles.buttonImage} />\n          <Text style={styles.buttonLabel}>{mealType.label}</Text>\n        </TouchableOpacity>\n      ))}\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  heading: {\n    fontSize: 20,\n    marginBottom: 20,\n  },\n  mealButton: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n  },\n  selectedMealButton: {\n    backgroundColor: \"lightblue\",\n  },\n  buttonImage: {\n    width: 24,\n    height: 24,\n    marginRight: 10,\n  },\n  buttonLabel: {\n    fontSize: 16,\n  },\n});\n\nexport default Cravings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}