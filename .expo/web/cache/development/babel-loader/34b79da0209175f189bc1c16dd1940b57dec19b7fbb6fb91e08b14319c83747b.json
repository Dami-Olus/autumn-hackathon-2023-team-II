{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction PreferencesScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedHealthLabels = _useState2[0],\n    setSelectedHealthLabels = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedDietLabels = _useState4[0],\n    setSelectedDietLabels = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedCuisines = _useState6[0],\n    setSelectedCuisines = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedDishTypes = _useState8[0],\n    setSelectedDishTypes = _useState8[1];\n  var _useState9 = useState(1),\n    _useState10 = _slicedToArray(_useState9, 2),\n    currentStep = _useState10[0],\n    setCurrentStep = _useState10[1];\n  var dietLabels = [\"Balanced\", \"High-Fiber\", \"High-Protein\", \"Low-Carb\", \"Low-Fat\", \"Low-Sodium\"];\n  var healthLabels = [\"Vegetarian\", \"Vegan\", \"Pescatarian\", \"Peanut-Free\", \"Dairy-Free\", \"Alcohol-Free\", \"Wheat-Free\"];\n  var cuisineType = [\"American\", \"Asian\", \"British\", \"Caribbean\", \"Chinese\", \"Italian\", \"Mexican\", \"Japanese\", \"Indian\"];\n  var dishType = [\"Biscuits and Cookies\", \"Bread\", \"Cereals\", \"Desserts\", \"Drinks\", \"Main Course\"];\n  var toggleSelection = function toggleSelection(label, step) {\n    switch (step) {\n      case 1:\n        if (selectedDietLabels.includes(label)) {\n          setSelectedDietLabels(function (prev) {\n            return prev.filter(function (item) {\n              return item !== label;\n            });\n          });\n        } else {\n          setSelectedDietLabels(function (prev) {\n            return [].concat(_toConsumableArray(prev), [label]);\n          });\n        }\n        break;\n      case 2:\n        if (selectedHealthLabels.includes(label)) {\n          setSelectedHealthLabels(function (prev) {\n            return prev.filter(function (item) {\n              return item !== label;\n            });\n          });\n        } else {\n          setSelectedHealthLabels(function (prev) {\n            return [].concat(_toConsumableArray(prev), [label]);\n          });\n        }\n        break;\n      case 3:\n        if (selectedCuisines.includes(label)) {\n          setSelectedCuisines(function (prev) {\n            return prev.filter(function (item) {\n              return item !== label;\n            });\n          });\n        } else {\n          setSelectedCuisines(function (prev) {\n            return [].concat(_toConsumableArray(prev), [label]);\n          });\n        }\n        break;\n      case 4:\n        if (selectedDishTypes.includes(label)) {\n          setSelectedDishTypes(function (prev) {\n            return prev.filter(function (item) {\n              return item !== label;\n            });\n          });\n        } else {\n          setSelectedDishTypes(function (prev) {\n            return [].concat(_toConsumableArray(prev), [label]);\n          });\n        }\n        break;\n      default:\n        return;\n    }\n  };\n  useEffect(function () {\n    if (currentStep === 4) {\n      console.log(\"Final Selections:\");\n      console.log('hello');\n      console.log(\"Diet Labels:\", selectedDietLabels);\n    }\n  }, [currentStep, selectedDietLabels, selectedHealthLabels, selectedCuisines, selectedDishTypes]);\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.sectionHeader,\n      children: [\"Step \", currentStep, \" of 4\"]\n    }), currentStep === 1 && _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Select your diet type\"\n      }), dietLabels.map(function (label, index) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.option],\n          onPress: function onPress() {\n            return toggleSelection(label, currentStep);\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: label\n          })\n        }, index);\n      })]\n    }), currentStep === 2 && _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Select your health labels\"\n      }), healthLabels.map(function (label, index) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.option],\n          onPress: function onPress() {\n            return toggleSelection(label, currentStep);\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: label\n          })\n        }, index);\n      })]\n    }), currentStep === 3 && _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Select your preferred cuisines\"\n      }), cuisineType.map(function (label, index) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.option],\n          onPress: function onPress() {\n            return toggleSelection(label, currentStep);\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: label\n          })\n        }, index);\n      })]\n    }), currentStep === 4 && _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Select your preferred dish type\"\n      }), dishType.map(function (label, index) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.option],\n          onPress: function onPress() {\n            return toggleSelection(label, currentStep);\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: label\n          })\n        }, index);\n      })]\n    }), currentStep < 4 && _jsx(TouchableOpacity, {\n      style: styles.nextButton,\n      onPress: function onPress() {\n        return setCurrentStep(currentStep + 1);\n      },\n      children: _jsx(Text, {\n        style: styles.nextButtonText,\n        children: \"Next\"\n      })\n    }), currentStep === 4 && _jsx(TouchableOpacity, {\n      style: styles.finishButton,\n      onPress: function onPress() {\n        console.log(\"Final Selections:\");\n      },\n      children: _jsx(Text, {\n        style: styles.finishButtonText,\n        children: \"Finish\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 16,\n    paddingTop: 16\n  },\n  sectionHeader: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  option: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 7,\n    marginVertical: 8\n  },\n  selectedOption: {\n    backgroundColor: \"lightblue\"\n  },\n  optionText: {\n    fontSize: 16\n  },\n  nextButton: {\n    alignItems: \"center\",\n    backgroundColor: \"lightblue\",\n    padding: 12,\n    borderRadius: 7\n  },\n  nextButtonText: {\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  finishButton: {\n    alignItems: \"center\",\n    backgroundColor: \"green\",\n    padding: 12,\n    borderRadius: 7\n  },\n  finishButtonText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"white\"\n  }\n});\nexport default PreferencesScreen;","map":{"version":3,"names":["useState","useEffect","SafeAreaView","View","Text","TouchableOpacity","StyleSheet","ScrollView","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","PreferencesScreen","_ref","navigation","_useState","_useState2","_slicedToArray","selectedHealthLabels","setSelectedHealthLabels","_useState3","_useState4","selectedDietLabels","setSelectedDietLabels","_useState5","_useState6","selectedCuisines","setSelectedCuisines","_useState7","_useState8","selectedDishTypes","setSelectedDishTypes","_useState9","_useState10","currentStep","setCurrentStep","dietLabels","healthLabels","cuisineType","dishType","toggleSelection","label","step","includes","prev","filter","item","concat","_toConsumableArray","console","log","style","styles","container","children","sectionHeader","map","index","option","onPress","optionText","nextButton","nextButtonText","finishButton","finishButtonText","create","flex","paddingHorizontal","paddingTop","fontSize","fontWeight","flexDirection","alignItems","padding","borderWidth","borderColor","borderRadius","marginVertical","selectedOption","backgroundColor","color"],"sources":["/Users/marcoruiz/code/autumn-hackathon-2023-team-II/screens/PreferenceScreen.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { SafeAreaView, View, Text, TouchableOpacity, StyleSheet, ScrollView } from \"react-native\";\n\nfunction PreferencesScreen({ navigation }) {\n  const [selectedHealthLabels, setSelectedHealthLabels] = useState([]);\n  const [selectedDietLabels, setSelectedDietLabels] = useState([]);\n  const [selectedCuisines, setSelectedCuisines] = useState([]);\n  const [selectedDishTypes, setSelectedDishTypes] = useState([]);\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const dietLabels = [\"Balanced\", \"High-Fiber\", \"High-Protein\", \"Low-Carb\", \"Low-Fat\", \"Low-Sodium\"];\n  const healthLabels = [\"Vegetarian\", \"Vegan\", \"Pescatarian\", \"Peanut-Free\", \"Dairy-Free\", \"Alcohol-Free\", \"Wheat-Free\"];\n  const cuisineType = [\"American\", \"Asian\", \"British\", \"Caribbean\", \"Chinese\", \"Italian\", \"Mexican\", \"Japanese\", \"Indian\"];\n  const dishType = [\"Biscuits and Cookies\", \"Bread\", \"Cereals\", \"Desserts\", \"Drinks\", \"Main Course\"];\n\n  const toggleSelection = (label, step) => {\n  \n    switch (step) {\n      case 1:\n        if (selectedDietLabels.includes(label)) {\n            setSelectedDietLabels((prev) => prev.filter((item) => item !== label));\n          } else {\n            setSelectedDietLabels((prev) => [...prev, label]);\n          }\n        break;\n      case 2:\n        if (selectedHealthLabels.includes(label)) {\n            setSelectedHealthLabels((prev) => prev.filter((item) => item !== label));\n          } else {\n            setSelectedHealthLabels((prev) => [...prev, label]);\n          }\n        break;\n      case 3:\n        if (selectedCuisines.includes(label)) {\n            setSelectedCuisines((prev) => prev.filter((item) => item !== label));\n          } else {\n            setSelectedCuisines((prev) => [...prev, label]);\n          }\n        break;\n      case 4:\n        if (selectedDishTypes.includes(label)) {\n            setSelectedDishTypes((prev) => prev.filter((item) => item !== label));\n          } else {\n            setSelectedDishTypes((prev) => [...prev, label]);\n          }\n        break;\n      default:\n        return;\n    }\n} \nuseEffect(() => {\n    if (currentStep === 4) {\n      console.log(\"Final Selections:\");\n      console.log('hello')\n      console.log(\"Diet Labels:\", selectedDietLabels);\n    //   console.log(\"Health Labels:\", selectedHealthLabels);\n    //   console.log(\"Cuisines:\", selectedCuisines);\n    //   console.log(\"Dish Types:\", selectedDishTypes);\n    }\n  }, [currentStep, selectedDietLabels, selectedHealthLabels, selectedCuisines, selectedDishTypes]);\n  \n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Text style={styles.sectionHeader}>Step {currentStep} of 4</Text>\n      {currentStep === 1 && (\n        <>\n            <Text>Select your diet type</Text>\n            {dietLabels.map((label, index) => (\n            <TouchableOpacity\n                key={index}\n                style={[\n                styles.option,\n                ]}\n                onPress={() => toggleSelection(label, currentStep)}\n            >\n                <Text style={styles.optionText}>{label}</Text>\n            </TouchableOpacity>\n            ))}\n        </>\n      )}\n      {currentStep === 2 && (\n        <>\n            <Text>Select your health labels</Text>\n            {healthLabels.map((label, index) => (\n            <TouchableOpacity\n                key={index}\n                style={[\n                styles.option,\n                ]}\n                onPress={() => toggleSelection(label, currentStep)}\n            >\n                <Text style={styles.optionText}>{label}</Text>\n            </TouchableOpacity>\n            ))}\n        </>\n      )}\n      {currentStep === 3 && (\n        <>\n            <Text>Select your preferred cuisines</Text>\n            {cuisineType.map((label, index) => (\n            <TouchableOpacity\n                key={index}\n                style={[\n                styles.option,\n                ]}\n                onPress={() => toggleSelection(label, currentStep)}\n            >\n                <Text style={styles.optionText}>{label}</Text>\n            </TouchableOpacity>\n            ))}\n        </>\n      )}\n      {currentStep === 4 && (\n        <>\n            <Text>Select your preferred dish type</Text>\n            {dishType.map((label, index) => (\n            <TouchableOpacity\n                key={index}\n                style={[\n                styles.option,\n                ]}\n                onPress={() => toggleSelection(label, currentStep)}\n            >\n                <Text style={styles.optionText}>{label}</Text>\n            </TouchableOpacity>\n            ))}\n        </>\n      )}\n  \n\n      {currentStep < 4 && (\n        <TouchableOpacity\n          style={styles.nextButton}\n          onPress={() => setCurrentStep(currentStep + 1)}\n        >\n          <Text style={styles.nextButtonText}>Next</Text>\n        </TouchableOpacity>\n      )}\n\n      {currentStep === 4 && (\n        <TouchableOpacity\n          style={styles.finishButton}\n          onPress={() => {\n            console.log(\"Final Selections:\");\n          }}\n        >\n          <Text style={styles.finishButtonText}>Finish</Text>\n        </TouchableOpacity>\n      )}\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 16,\n    paddingTop: 16,\n  },\n  sectionHeader: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  option: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 7,\n    marginVertical: 8,\n  },\n  selectedOption: {\n    backgroundColor: \"lightblue\",\n  },\n  optionText: {\n    fontSize: 16,\n  },\n  nextButton: {\n    alignItems: \"center\",\n    backgroundColor: \"lightblue\",\n    padding: 12,\n    borderRadius: 7,\n  },\n  nextButtonText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  finishButton: {\n    alignItems: \"center\",\n    backgroundColor: \"green\",\n    padding: 12,\n    borderRadius: 7,\n  },\n  finishButtonText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n});\n\nexport default PreferencesScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}