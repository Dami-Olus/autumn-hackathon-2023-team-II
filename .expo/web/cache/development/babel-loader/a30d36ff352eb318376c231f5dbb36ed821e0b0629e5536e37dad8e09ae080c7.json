{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AuthScreen from \"./screens/AuthScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nfunction Navigation() {\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    userInfo = _React$useState2[0],\n    setUserInfo = _React$useState2[1];\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      initialRouteName: userInfo ? 'Home' : 'Auth',\n      children: userInfo ? _jsx(Stack.Screen, {\n        name: \"Home\",\n        children: function children(props) {\n          return _jsx(HomeScreen, _objectSpread(_objectSpread({}, props), {}, {\n            userInfo: userInfo\n          }));\n        }\n      }) : _jsx(Stack.Screen, {\n        name: \"Auth\",\n        children: function children(props) {\n          return _jsx(AuthScreen, _objectSpread(_objectSpread({}, props), {}, {\n            userInfo: userInfo\n          }));\n        }\n      })\n    })\n  });\n}\nexport default Navigation;","map":{"version":3,"names":["React","useEffect","NavigationContainer","createStackNavigator","AuthScreen","HomeScreen","AsyncStorage","jsx","_jsx","Stack","Navigation","_React$useState","useState","_React$useState2","_slicedToArray","userInfo","setUserInfo","children","Navigator","initialRouteName","Screen","name","props","_objectSpread"],"sources":["/Users/marcoruiz/code/autumn-hackathon-2023-team-II/Navigation.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AuthScreen from './screens/AuthScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Stack = createStackNavigator();\n\nfunction Navigation() {\n//   const [userIsAuthenticated, setUserIsAuthenticated] = React.useState(false);\n  const [userInfo, setUserInfo] = React.useState(null);\n\n//   useEffect(() => {\n//     checkAuthenticationStatus();\n//   }, []);\n\n//   const checkAuthenticationStatus = async () => {\n//     try {\n//       const userIsAuthenticated = await AsyncStorage.getItem('@userIsAuthenticated');\n//       if (userIsAuthenticated === 'true') {\n//         setUserIsAuthenticated(true);\n//       }\n//     } catch (error) {\n//       console.error('Error checking authentication status:', error);\n//     }\n//   };\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName={userInfo ? 'Home' : 'Auth'}>\n      {userInfo ? (\n          <Stack.Screen name=\"Home\">\n            {props => <HomeScreen {...props} userInfo={userInfo} />}\n          </Stack.Screen>\n        ) : (\n          <Stack.Screen name=\"Auth\">\n            {props => <AuthScreen {...props} userInfo={userInfo} />}\n          </Stack.Screen>\n          \n        )}\n        {/* <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"Auth\" component={AuthScreen} options={{ headerShown: false }}/> */}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default Navigation;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,UAAU;AACjB,OAAOC,UAAU;AACjB,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAErE,IAAMC,KAAK,GAAGN,oBAAoB,CAAC,CAAC;AAEpC,SAASO,UAAUA,CAAA,EAAG;EAEpB,IAAAC,eAAA,GAAgCX,KAAK,CAACY,QAAQ,CAAC,IAAI,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA7CI,QAAQ,GAAAF,gBAAA;IAAEG,WAAW,GAAAH,gBAAA;EAiB5B,OACEL,IAAA,CAACN,mBAAmB;IAAAe,QAAA,EAClBT,IAAA,CAACC,KAAK,CAACS,SAAS;MAACC,gBAAgB,EAAEJ,QAAQ,GAAG,MAAM,GAAG,MAAO;MAAAE,QAAA,EAC7DF,QAAQ,GACLP,IAAA,CAACC,KAAK,CAACW,MAAM;QAACC,IAAI,EAAC,MAAM;QAAAJ,QAAA,EACtB,SAAAA,SAAAK,KAAK;UAAA,OAAId,IAAA,CAACH,UAAU,EAAAkB,aAAA,CAAAA,aAAA,KAAKD,KAAK;YAAEP,QAAQ,EAAEA;UAAS,EAAE,CAAC;QAAA;MAAA,CAC3C,CAAC,GAEfP,IAAA,CAACC,KAAK,CAACW,MAAM;QAACC,IAAI,EAAC,MAAM;QAAAJ,QAAA,EACtB,SAAAA,SAAAK,KAAK;UAAA,OAAId,IAAA,CAACJ,UAAU,EAAAmB,aAAA,CAAAA,aAAA,KAAKD,KAAK;YAAEP,QAAQ,EAAEA;UAAS,EAAE,CAAC;QAAA;MAAA,CAC3C;IAEf,CAGc;EAAC,CACC,CAAC;AAE1B;AAEA,eAAeL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}