{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AuthScreen from \"./screens/AuthScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nfunction Navigation() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    userIsAuthenticated = _React$useState2[0],\n    setUserIsAuthenticated = _React$useState2[1];\n  useEffect(function () {\n    checkAuthenticationStatus();\n  }, []);\n  var checkAuthenticationStatus = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var _userIsAuthenticated = yield AsyncStorage.getItem('@userIsAuthenticated');\n        if (_userIsAuthenticated === 'true') {\n          setUserIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Error checking authentication status:', error);\n      }\n    });\n    return function checkAuthenticationStatus() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      initialRouteName: 'Auth',\n      children: userIsAuthenticated && _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      })\n    })\n  });\n}\nexport default Navigation;","map":{"version":3,"names":["React","useEffect","NavigationContainer","createStackNavigator","AuthScreen","HomeScreen","AsyncStorage","jsx","_jsx","Stack","Navigation","_React$useState","useState","_React$useState2","_slicedToArray","userIsAuthenticated","setUserIsAuthenticated","checkAuthenticationStatus","_ref","_asyncToGenerator","getItem","error","console","apply","arguments","children","Navigator","initialRouteName","Screen","name","component"],"sources":["/Users/marcoruiz/code/autumn-hackathon-2023-team-II/Navigation.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AuthScreen from './screens/AuthScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Stack = createStackNavigator();\n\nfunction Navigation() {\n  const [userIsAuthenticated, setUserIsAuthenticated] = React.useState(false);\n\n  useEffect(() => {\n    checkAuthenticationStatus();\n  }, []);\n\n  const checkAuthenticationStatus = async () => {\n    try {\n      const userIsAuthenticated = await AsyncStorage.getItem('@userIsAuthenticated');\n      if (userIsAuthenticated === 'true') {\n        setUserIsAuthenticated(true);\n      }\n    } catch (error) {\n      console.error('Error checking authentication status:', error);\n    }\n  };\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName={'Auth'}>\n        {userIsAuthenticated && \n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        \n        }\n        {/* <Stack.Screen name=\"Auth\" component={AuthScreen} /> */}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default Navigation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,UAAU;AACjB,OAAOC,UAAU;AACjB,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAErE,IAAMC,KAAK,GAAGN,oBAAoB,CAAC,CAAC;AAEpC,SAASO,UAAUA,CAAA,EAAG;EACpB,IAAAC,eAAA,GAAsDX,KAAK,CAACY,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAApEI,mBAAmB,GAAAF,gBAAA;IAAEG,sBAAsB,GAAAH,gBAAA;EAElDZ,SAAS,CAAC,YAAM;IACdgB,yBAAyB,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,yBAAyB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC5C,IAAI;QACF,IAAMJ,oBAAmB,SAAST,YAAY,CAACc,OAAO,CAAC,sBAAsB,CAAC;QAC9E,IAAIL,oBAAmB,KAAK,MAAM,EAAE;UAClCC,sBAAsB,CAAC,IAAI,CAAC;QAC9B;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D;IACF,CAAC;IAAA,gBATKJ,yBAAyBA,CAAA;MAAA,OAAAC,IAAA,CAAAK,KAAA,OAAAC,SAAA;IAAA;EAAA,GAS9B;EAED,OACEhB,IAAA,CAACN,mBAAmB;IAAAuB,QAAA,EAClBjB,IAAA,CAACC,KAAK,CAACiB,SAAS;MAACC,gBAAgB,EAAE,MAAO;MAAAF,QAAA,EACvCV,mBAAmB,IACpBP,IAAA,CAACC,KAAK,CAACmB,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEzB;MAAW,CAAE;IAAC,CAIpC;EAAC,CACC,CAAC;AAE1B;AAEA,eAAeK,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}