{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction PreferencesScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedHealthLabels = _useState2[0],\n    setSelectedHealthLabels = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedCuisines = _useState4[0],\n    setSelectedCuisines = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedDishTypes = _useState6[0],\n    setSelectedDishTypes = _useState6[1];\n  var _useState7 = useState(1),\n    _useState8 = _slicedToArray(_useState7, 2),\n    currentStep = _useState8[0],\n    setCurrentStep = _useState8[1];\n  var healthLabels = [\"Vegan\", \"Vegetarian\", \"Gluten-free\", \"Low-sodium\"];\n  var cuisines = [\"Italian\", \"Mexican\", \"Japanese\", \"Indian\"];\n  var dishTypes = [\"Salad\", \"Soup\", \"Pasta\", \"Pizza\"];\n  var toggleSelection = function toggleSelection(item, category) {\n    switch (category) {\n      case \"health\":\n        setSelectedHealthLabels(function (prev) {\n          if (prev.includes(item)) {\n            return prev.filter(function (label) {\n              return label !== item;\n            });\n          } else {\n            return [].concat(_toConsumableArray(prev), [item]);\n          }\n        });\n        break;\n      case \"cuisines\":\n        setSelectedCuisines(function (prev) {\n          if (prev.includes(item)) {\n            return prev.filter(function (cuisine) {\n              return cuisine !== item;\n            });\n          } else {\n            return [].concat(_toConsumableArray(prev), [item]);\n          }\n        });\n        break;\n      case \"dishTypes\":\n        setSelectedDishTypes(function (prev) {\n          if (prev.includes(item)) {\n            return prev.filter(function (type) {\n              return type !== item;\n            });\n          } else {\n            return [].concat(_toConsumableArray(prev), [item]);\n          }\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  var nextStep = function nextStep() {\n    setCurrentStep(currentStep + 1);\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [currentStep === 1 && _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionHeader,\n        children: \"Health Labels\"\n      }), healthLabels.map(function (label, index) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.option, selectedHealthLabels.includes(label) && styles.selectedOption],\n          onPress: function onPress() {\n            return toggleSelection(label, \"health\");\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: label\n          })\n        }, index);\n      })]\n    }), currentStep === 2 && _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionHeader,\n        children: \"Preferred Cuisines\"\n      }), cuisines.map(function (cuisine, index) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.option, selectedCuisines.includes(cuisine) && styles.selectedOption],\n          onPress: function onPress() {\n            return toggleSelection(cuisine, \"cuisines\");\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: cuisine\n          })\n        }, index);\n      })]\n    }), currentStep === 3 && _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionHeader,\n        children: \"Preferred Dish Types\"\n      }), dishTypes.map(function (type, index) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.option, selectedDishTypes.includes(type) && styles.selectedOption],\n          onPress: function onPress() {\n            return toggleSelection(type, \"dishTypes\");\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: type\n          })\n        }, index);\n      })]\n    }), currentStep < 3 && _jsx(TouchableOpacity, {\n      style: styles.nextButton,\n      onPress: nextStep,\n      children: _jsx(Text, {\n        style: styles.nextButtonText,\n        children: \"Next\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 16,\n    paddingTop: 16\n  },\n  section: {\n    marginBottom: 16\n  },\n  sectionHeader: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  option: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 7,\n    marginVertical: 8\n  },\n  selectedOption: {\n    backgroundColor: \"lightblue\"\n  },\n  optionText: {\n    fontSize: 16\n  },\n  nextButton: {\n    alignItems: \"center\",\n    backgroundColor: \"lightblue\",\n    padding: 12,\n    borderRadius: 7\n  },\n  nextButtonText: {\n    fontSize: 18,\n    fontWeight: \"bold\"\n  }\n});\nexport default PreferencesScreen;","map":{"version":3,"names":["React","useState","SafeAreaView","View","Text","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","PreferencesScreen","_ref","navigation","_useState","_useState2","_slicedToArray","selectedHealthLabels","setSelectedHealthLabels","_useState3","_useState4","selectedCuisines","setSelectedCuisines","_useState5","_useState6","selectedDishTypes","setSelectedDishTypes","_useState7","_useState8","currentStep","setCurrentStep","healthLabels","cuisines","dishTypes","toggleSelection","item","category","prev","includes","filter","label","concat","_toConsumableArray","cuisine","type","nextStep","style","styles","container","children","section","sectionHeader","map","index","option","selectedOption","onPress","optionText","nextButton","nextButtonText","create","flex","paddingHorizontal","paddingTop","marginBottom","fontSize","fontWeight","flexDirection","alignItems","padding","borderWidth","borderColor","borderRadius","marginVertical","backgroundColor"],"sources":["/Users/marcoruiz/code/autumn-hackathon-2023-team-II/screens/PreferenceScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { SafeAreaView, View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\n\nfunction PreferencesScreen({ navigation }) {\n  const [selectedHealthLabels, setSelectedHealthLabels] = useState([]);\n  const [selectedCuisines, setSelectedCuisines] = useState([]);\n  const [selectedDishTypes, setSelectedDishTypes] = useState([]);\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const healthLabels = [\"Vegan\", \"Vegetarian\", \"Gluten-free\", \"Low-sodium\"];\n  const cuisines = [\"Italian\", \"Mexican\", \"Japanese\", \"Indian\"];\n  const dishTypes = [\"Salad\", \"Soup\", \"Pasta\", \"Pizza\"];\n\n  const toggleSelection = (item, category) => {\n    switch (category) {\n      case \"health\":\n        setSelectedHealthLabels((prev) => {\n          if (prev.includes(item)) {\n            return prev.filter((label) => label !== item);\n          } else {\n            return [...prev, item];\n          }\n        });\n        break;\n      case \"cuisines\":\n        setSelectedCuisines((prev) => {\n          if (prev.includes(item)) {\n            return prev.filter((cuisine) => cuisine !== item);\n          } else {\n            return [...prev, item];\n          }\n        });\n        break;\n      case \"dishTypes\":\n        setSelectedDishTypes((prev) => {\n          if (prev.includes(item)) {\n            return prev.filter((type) => type !== item);\n          } else {\n            return [...prev, item];\n          }\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const nextStep = () => {\n    setCurrentStep(currentStep + 1);\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {currentStep === 1 && (\n        <View style={styles.section}>\n          <Text style={styles.sectionHeader}>Health Labels</Text>\n          {healthLabels.map((label, index) => (\n            <TouchableOpacity\n              key={index}\n              style={[\n                styles.option,\n                selectedHealthLabels.includes(label) && styles.selectedOption\n              ]}\n              onPress={() => toggleSelection(label, \"health\")}\n            >\n              <Text style={styles.optionText}>{label}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      )}\n\n      {currentStep === 2 && (\n        <View style={styles.section}>\n          <Text style={styles.sectionHeader}>Preferred Cuisines</Text>\n          {cuisines.map((cuisine, index) => (\n            <TouchableOpacity\n              key={index}\n              style={[\n                styles.option,\n                selectedCuisines.includes(cuisine) && styles.selectedOption\n              ]}\n              onPress={() => toggleSelection(cuisine, \"cuisines\")}\n            >\n              <Text style={styles.optionText}>{cuisine}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      )}\n\n      {currentStep === 3 && (\n        <View style={styles.section}>\n          <Text style={styles.sectionHeader}>Preferred Dish Types</Text>\n          {dishTypes.map((type, index) => (\n            <TouchableOpacity\n              key={index}\n              style={[\n                styles.option,\n                selectedDishTypes.includes(type) && styles.selectedOption\n              ]}\n              onPress={() => toggleSelection(type, \"dishTypes\")}\n            >\n              <Text style={styles.optionText}>{type}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      )}\n\n      {currentStep < 3 && (\n        <TouchableOpacity\n          style={styles.nextButton}\n          onPress={nextStep}\n        >\n          <Text style={styles.nextButtonText}>Next</Text>\n        </TouchableOpacity>\n      )}\n\n      {/* You can display the selected preferences or save the selections here */}\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 16,\n    paddingTop: 16,\n  },\n  section: {\n    marginBottom: 16,\n  },\n  sectionHeader: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  option: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 7,\n    marginVertical: 8,\n  },\n  selectedOption: {\n    backgroundColor: \"lightblue\",\n  },\n  optionText: {\n    fontSize: 16,\n  },\n  nextButton: {\n    alignItems: \"center\",\n    backgroundColor: \"lightblue\",\n    padding: 12,\n    borderRadius: 7,\n  },\n  nextButtonText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n});\n\nexport default PreferencesScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}