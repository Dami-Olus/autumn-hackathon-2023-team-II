{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction PreferencesScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedHealthLabels = _useState2[0],\n    setSelectedHealthLabels = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedDietLabels = _useState4[0],\n    setSelectedDietLabels = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedCuisines = _useState6[0],\n    setSelectedCuisines = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedDishTypes = _useState8[0],\n    setSelectedDishTypes = _useState8[1];\n  var _useState9 = useState(1),\n    _useState10 = _slicedToArray(_useState9, 2),\n    currentStep = _useState10[0],\n    setCurrentStep = _useState10[1];\n  var dietLabels = [\"Balanced\", \"High-Fiber\", \"High-Protein\", \"Low-Carb\", \"Low-Fat\", \"Low-Sodium\"];\n  var healthLabels = [\"Vegetarian\", \"Vegan\", \"Pescatarian\", \"Peanut-Free\", \"Dairy-Free\", \"Alcohol-Free\", \"Wheat-Free\"];\n  var cuisineType = [\"American\", \"Asian\", \"British\", \"Caribbean\", \"Chinese\", \"Italian\", \"Mexican\", \"Japanese\", \"Indian\"];\n  var dishType = [\"Biscuits and Cookies\", \"Bread\", \"Cereals\", \"Desserts\", \"Drinks\", \"Main Course\"];\n  var toggleSelection = function toggleSelection(label, step) {\n    switch (step) {\n      case 1:\n        if (selectedDietLabels.includes(label)) {\n          setSelectedDietLabels(function (prev) {\n            return prev.filter(function (item) {\n              return item !== label;\n            });\n          });\n        } else {\n          setSelectedDietLabels(function (prev) {\n            return [].concat(_toConsumableArray(prev), [label]);\n          });\n        }\n        break;\n      case 2:\n        if (selectedHealthLabels.includes(label)) {\n          setSelectedHealthLabels(function (prev) {\n            return prev.filter(function (item) {\n              return item !== label;\n            });\n          });\n        } else {\n          setSelectedHealthLabels(function (prev) {\n            return [].concat(_toConsumableArray(prev), [label]);\n          });\n        }\n        break;\n      case 3:\n        if (selectedCuisines.includes(label)) {\n          setSelectedCuisines(function (prev) {\n            return prev.filter(function (item) {\n              return item !== label;\n            });\n          });\n        } else {\n          setSelectedCuisines(function (prev) {\n            return [].concat(_toConsumableArray(prev), [label]);\n          });\n        }\n        break;\n      case 4:\n        if (selectedDishTypes.includes(label)) {\n          setSelectedDishTypes(function (prev) {\n            return prev.filter(function (item) {\n              return item !== label;\n            });\n          });\n        } else {\n          setSelectedDishTypes(function (prev) {\n            return [].concat(_toConsumableArray(prev), [label]);\n          });\n        }\n        break;\n      default:\n        return;\n    }\n  };\n  var handleFinishSelections = function handleFinishSelections() {\n    console.log(\"Final Selections:\");\n    console.log(\"Diet Labels:\", selectedDietLabels);\n    console.log(\"Health Labels:\", selectedHealthLabels);\n    console.log(\"Cuisines:\", selectedCuisines);\n    console.log(\"Dish Types:\", selectedDishTypes);\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: [_jsxs(Text, {\n        style: styles.sectionHeader,\n        children: [\"Step \", currentStep, \" of 4\"]\n      }), currentStep === 1 && _jsxs(_Fragment, {\n        children: [_jsx(Text, {\n          style: styles.labelHeader,\n          children: \"Select your diet type\"\n        }), dietLabels.map(function (label, index) {\n          return _jsxs(TouchableOpacity, {\n            style: [styles.option],\n            onPress: function onPress() {\n              return toggleSelection(label, currentStep);\n            },\n            children: [_jsx(Text, {\n              style: styles.optionText,\n              children: label\n            }), _jsx(AntDesign, {\n              name: \"pluscircleo\",\n              size: 20,\n              color: \"black\"\n            })]\n          }, index);\n        })]\n      }), currentStep === 2 && _jsxs(_Fragment, {\n        children: [_jsx(Text, {\n          style: styles.labelHeader,\n          children: \"Select your health labels\"\n        }), healthLabels.map(function (label, index) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.option],\n            onPress: function onPress() {\n              return toggleSelection(label, currentStep);\n            },\n            children: _jsx(Text, {\n              style: styles.optionText,\n              children: label\n            })\n          }, index);\n        })]\n      }), currentStep === 3 && _jsxs(_Fragment, {\n        children: [_jsx(Text, {\n          style: styles.labelHeader,\n          children: \"Select your preferred cuisines\"\n        }), cuisineType.map(function (label, index) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.option],\n            onPress: function onPress() {\n              return toggleSelection(label, currentStep);\n            },\n            children: _jsx(Text, {\n              style: styles.optionText,\n              children: label\n            })\n          }, index);\n        })]\n      }), currentStep === 4 && _jsxs(_Fragment, {\n        children: [_jsx(Text, {\n          style: styles.labelHeader,\n          children: \"Select your preferred dish type\"\n        }), dishType.map(function (label, index) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.option],\n            onPress: function onPress() {\n              return toggleSelection(label, currentStep);\n            },\n            children: _jsx(Text, {\n              style: styles.optionText,\n              children: label\n            })\n          }, index);\n        })]\n      }), currentStep < 4 && _jsx(TouchableOpacity, {\n        style: styles.nextButton,\n        onPress: function onPress() {\n          return setCurrentStep(currentStep + 1);\n        },\n        children: _jsx(Text, {\n          style: styles.nextButtonText,\n          children: \"Continue\"\n        })\n      }), currentStep === 4 && _jsx(TouchableOpacity, {\n        style: styles.finishButton,\n        onPress: handleFinishSelections,\n        children: _jsx(Text, {\n          style: styles.finishButtonText,\n          children: \"Save Preferences\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1,\n    alignItems: 'center',\n    backgroundColor: '#FFF',\n    gap: 30\n  },\n  container: {\n    flex: 1,\n    paddingHorizontal: 16,\n    paddingTop: 16\n  },\n  sectionHeader: {\n    fontSize: 18,\n    fontWeight: \"700\",\n    color: '#8ABB00'\n  },\n  labelHeader: {\n    fontSize: 18,\n    fontWeight: \"700\",\n    color: '#424242',\n    fontFamily: 'Poppins'\n  },\n  option: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: 250,\n    justifyContent: \"space-between\"\n  },\n  selectedOption: {\n    backgroundColor: \"lightblue\"\n  },\n  optionText: {\n    fontSize: 18,\n    fontFamily: 'Poppins',\n    fontWeight: '500',\n    color: '#000'\n  },\n  nextButton: {\n    flexDirection: 'row',\n    backgroundColor: 'rgb(149, 184, 57)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15,\n    paddingHorizontal: 35,\n    borderRadius: 10,\n    maxWidth: 'max-content',\n    marginVertical: 20\n  },\n  nextButtonText: {\n    color: 'white',\n    fontSize: 18,\n    marginRight: 10,\n    fontWeight: '600'\n  },\n  finishButton: {\n    flexDirection: 'row',\n    backgroundColor: 'rgb(149, 184, 57)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15,\n    paddingHorizontal: 35,\n    borderRadius: 10,\n    maxWidth: 'max-content',\n    marginVertical: 20\n  },\n  finishButtonText: {\n    color: 'white',\n    fontSize: 18,\n    marginRight: 10,\n    fontWeight: '600'\n  }\n});\nexport default PreferencesScreen;","map":{"version":3,"names":["useState","useEffect","SafeAreaView","View","Text","TouchableOpacity","StyleSheet","ScrollView","AntDesign","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","PreferencesScreen","_ref","navigation","_useState","_useState2","_slicedToArray","selectedHealthLabels","setSelectedHealthLabels","_useState3","_useState4","selectedDietLabels","setSelectedDietLabels","_useState5","_useState6","selectedCuisines","setSelectedCuisines","_useState7","_useState8","selectedDishTypes","setSelectedDishTypes","_useState9","_useState10","currentStep","setCurrentStep","dietLabels","healthLabels","cuisineType","dishType","toggleSelection","label","step","includes","prev","filter","item","concat","_toConsumableArray","handleFinishSelections","console","log","style","styles","container","children","contentContainerStyle","scrollContainer","sectionHeader","labelHeader","map","index","option","onPress","optionText","name","size","color","nextButton","nextButtonText","finishButton","finishButtonText","create","flexGrow","alignItems","backgroundColor","gap","flex","paddingHorizontal","paddingTop","fontSize","fontWeight","fontFamily","flexDirection","width","justifyContent","selectedOption","padding","borderRadius","maxWidth","marginVertical","marginRight"],"sources":["/Users/marcoruiz/code/autumn-hackathon-2023-team-II/screens/PreferenceScreen.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { SafeAreaView, View, Text, TouchableOpacity, StyleSheet, ScrollView } from \"react-native\";\nimport { AntDesign } from '@expo/vector-icons';\n\nfunction PreferencesScreen({ navigation }) {\n  const [selectedHealthLabels, setSelectedHealthLabels] = useState([]);\n  const [selectedDietLabels, setSelectedDietLabels] = useState([]);\n  const [selectedCuisines, setSelectedCuisines] = useState([]);\n  const [selectedDishTypes, setSelectedDishTypes] = useState([]);\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const dietLabels = [\"Balanced\", \"High-Fiber\", \"High-Protein\", \"Low-Carb\", \"Low-Fat\", \"Low-Sodium\"];\n  const healthLabels = [\"Vegetarian\", \"Vegan\", \"Pescatarian\", \"Peanut-Free\", \"Dairy-Free\", \"Alcohol-Free\", \"Wheat-Free\"];\n  const cuisineType = [\"American\", \"Asian\", \"British\", \"Caribbean\", \"Chinese\", \"Italian\", \"Mexican\", \"Japanese\", \"Indian\"];\n  const dishType = [\"Biscuits and Cookies\", \"Bread\", \"Cereals\", \"Desserts\", \"Drinks\", \"Main Course\"];\n\n  const toggleSelection = (label, step) => {\n  \n    switch (step) {\n      case 1:\n        if (selectedDietLabels.includes(label)) {\n            setSelectedDietLabels((prev) => prev.filter((item) => item !== label));\n          } else {\n            setSelectedDietLabels((prev) => [...prev, label]);\n          }\n        break;\n      case 2:\n        if (selectedHealthLabels.includes(label)) {\n            setSelectedHealthLabels((prev) => prev.filter((item) => item !== label));\n          } else {\n            setSelectedHealthLabels((prev) => [...prev, label]);\n          }\n        break;\n      case 3:\n        if (selectedCuisines.includes(label)) {\n            setSelectedCuisines((prev) => prev.filter((item) => item !== label));\n          } else {\n            setSelectedCuisines((prev) => [...prev, label]);\n          }\n        break;\n      case 4:\n        if (selectedDishTypes.includes(label)) {\n            setSelectedDishTypes((prev) => prev.filter((item) => item !== label));\n          } else {\n            setSelectedDishTypes((prev) => [...prev, label]);\n          }\n        break;\n      default:\n        return;\n    }\n} \n\nconst handleFinishSelections = () => {\n    console.log(\"Final Selections:\");\n    console.log(\"Diet Labels:\", selectedDietLabels);\n    console.log(\"Health Labels:\", selectedHealthLabels);\n    console.log(\"Cuisines:\", selectedCuisines);\n    console.log(\"Dish Types:\", selectedDishTypes);\n};\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n          <Text style={styles.sectionHeader}>Step {currentStep} of 4</Text>\n          {currentStep === 1 && (\n            <>\n                <Text style={styles.labelHeader}>Select your diet type</Text>\n                {dietLabels.map((label, index) => (\n                <TouchableOpacity\n                    key={index}\n                    style={[\n                    styles.option,\n                    ]}\n                    onPress={() => toggleSelection(label, currentStep)}\n                >\n                    <Text style={styles.optionText}>{label}</Text>\n                    <AntDesign name=\"pluscircleo\" size={20} color=\"black\" />\n                </TouchableOpacity>\n                ))}\n            </>\n          )}\n          {currentStep === 2 && (\n            <>\n                <Text style={styles.labelHeader}>Select your health labels</Text>\n                {healthLabels.map((label, index) => (\n                <TouchableOpacity\n                    key={index}\n                    style={[\n                    styles.option,\n                    ]}\n                    onPress={() => toggleSelection(label, currentStep)}\n                >\n                    <Text style={styles.optionText}>{label}</Text>\n                </TouchableOpacity>\n                ))}\n            </>\n          )}\n          {currentStep === 3 && (\n            <>\n                <Text style={styles.labelHeader}>Select your preferred cuisines</Text>\n                {cuisineType.map((label, index) => (\n                <TouchableOpacity\n                    key={index}\n                    style={[\n                    styles.option,\n                    ]}\n                    onPress={() => toggleSelection(label, currentStep)}\n                >\n                    <Text style={styles.optionText}>{label}</Text>\n                </TouchableOpacity>\n                ))}\n            </>\n          )}\n          {currentStep === 4 && (\n            <>\n                <Text style={styles.labelHeader}>Select your preferred dish type</Text>\n                {dishType.map((label, index) => (\n                <TouchableOpacity\n                    key={index}\n                    style={[\n                    styles.option,\n                    ]}\n                    onPress={() => toggleSelection(label, currentStep)}\n                >\n                    <Text style={styles.optionText}>{label}</Text>\n                </TouchableOpacity>\n                ))}\n            </>\n          )}\n          {currentStep < 4 && (\n            <TouchableOpacity\n              style={styles.nextButton}\n              onPress={() => setCurrentStep(currentStep + 1)}\n            >\n              <Text style={styles.nextButtonText}>Continue</Text>\n            </TouchableOpacity>\n          )}\n          {currentStep === 4 && (\n            <TouchableOpacity\n              style={styles.finishButton}\n              onPress={handleFinishSelections}\n            >\n              <Text style={styles.finishButtonText}>Save Preferences</Text>\n            </TouchableOpacity>\n          )}\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1,\n    alignItems: 'center',\n    backgroundColor: '#FFF',\n    gap: 30\n  },\n  container: {\n    flex: 1,\n    paddingHorizontal: 16,\n    paddingTop: 16,\n  },\n  sectionHeader: {\n    fontSize: 18,\n    fontWeight: \"700\",\n    color: '#8ABB00',\n  },\n  labelHeader: {\n    fontSize: 18,\n    fontWeight: \"700\",\n    color: '#424242',\n    fontFamily: 'Poppins'\n  },\n  option: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: 250, \n    justifyContent: \"space-between\", \n  },\n  \n  selectedOption: {\n    backgroundColor: \"lightblue\",\n  },\n  optionText: {\n    fontSize: 18,\n    fontFamily: 'Poppins',\n    fontWeight: '500',\n    color: '#000'\n  },\n  nextButton: {\n    flexDirection: 'row',\n    backgroundColor: 'rgb(149, 184, 57)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15,\n    paddingHorizontal: 35,\n    borderRadius: 10,\n    maxWidth: 'max-content',\n    marginVertical: 20\n  },\n  nextButtonText: {\n    color: 'white',\n    fontSize: 18,\n    marginRight: 10,\n    fontWeight: '600',\n  },\n  finishButton: {\n    flexDirection: 'row',\n    backgroundColor: 'rgb(149, 184, 57)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15,\n    paddingHorizontal: 35,\n    borderRadius: 10,\n    maxWidth: 'max-content',\n    marginVertical: 20\n  },\n  finishButtonText: {\n    color: 'white',\n    fontSize: 18,\n    marginRight: 10,\n    fontWeight: '600',\n  },\n});\n\nexport default PreferencesScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}